#!/usr/bin/python

import os
import sys
import signal
import time
import subprocess

def shellGetOutput(str) :
    process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE)
    output, err = process.communicate()

    return output
          
print "Running scalability experiments..."


threads = shellGetOutput("nproc --all")

print "Number of threads = " + threads


dataDir = "inputs/"

applications = ["HyperBFS","HyperBC","HyperCC","HyperPageRank","HyperKCore-Efficient","HyperKCore"]
mis = ["HyperMIS"]
wapplications = ["HyperSSSP"]

testfiles = [("com-orkut-ligrah","0"),("com-friendster-ligrah","0"),("rand1-ligrah","0"),("rand2-ligrah","0"),("rand3-ligrah","0"),("orkut-groupmemberships-ligrah","0"),("trackers-ligrah","0"),("livejournal-ligrah","0")]

#testfiles = [("/ssd0/jshun/rand-1B-1B-10","0")]

wtestfiles = [("com-orkut-wgh-ligrah","0"),("com-friendster-wgh-ligrah","0"),("rand1-wgh-ligrah","0"),("rand2-wgh-ligrah","0"),("rand3-wgh-ligrah","0"),("rand-10M-10M-100-wgh","0"),("orkut-groupmemberships-wgh-ligrah","0"),("trackers-wgh-ligrah","0"),("livejournal-wgh-ligrah","0")]

#wtestfiles = [("/ssd1/jshun/rand-1B-1B-10-wgh","0")]

processors = [1,int(threads)/2,int(threads)]

print processors

os.system("export CILK=1; make clean; make -j")

for app in applications:
  for testfile in testfiles :
    for p in processors :
      if p <= 4:
        ss = "export CILK_NWORKERS="+`p`+"; ./"+app+' -s -rounds 1 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 3 -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " thread(s) on " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in mis:
  for testfile in testfiles :
    for p in processors :
      if p <= 4:
        ss = "export CILK_NWORKERS="+`p`+"; ./"+app+' -s -rounds 0 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 0 -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " threads(s) on " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in wapplications:
  for testfile in wtestfiles :
    for p in processors :
      if p <= 4:
        ss = "export CILK_NWORKERS="+`p`+"; ./"+app+' -s -rounds 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 3 -r '+testfile[1]+' ' + dataDir + testfile[0]
      print app+" "+`p` + " thread(s) on " + testfile[0]
      print shellGetOutput(ss)
      sys.stdout.flush()

